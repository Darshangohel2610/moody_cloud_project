/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RecommendationsRouteImport } from './routes/recommendations'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as MoodRouteImport } from './routes/mood'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SelfieIndexRouteImport } from './routes/selfie/index'
import { Route as SelfieSelfiIdRouteImport } from './routes/selfie/$selfiId'
import { Route as AuthSignupRouteImport } from './routes/auth/signup'
import { Route as AuthLoginRouteImport } from './routes/auth/login'

const RecommendationsRoute = RecommendationsRouteImport.update({
  id: '/recommendations',
  path: '/recommendations',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const MoodRoute = MoodRouteImport.update({
  id: '/mood',
  path: '/mood',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SelfieIndexRoute = SelfieIndexRouteImport.update({
  id: '/selfie/',
  path: '/selfie/',
  getParentRoute: () => rootRouteImport,
} as any)
const SelfieSelfiIdRoute = SelfieSelfiIdRouteImport.update({
  id: '/selfie/$selfiId',
  path: '/selfie/$selfiId',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/mood': typeof MoodRoute
  '/profile': typeof ProfileRoute
  '/recommendations': typeof RecommendationsRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/selfie/$selfiId': typeof SelfieSelfiIdRoute
  '/selfie': typeof SelfieIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/mood': typeof MoodRoute
  '/profile': typeof ProfileRoute
  '/recommendations': typeof RecommendationsRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/selfie/$selfiId': typeof SelfieSelfiIdRoute
  '/selfie': typeof SelfieIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/mood': typeof MoodRoute
  '/profile': typeof ProfileRoute
  '/recommendations': typeof RecommendationsRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/selfie/$selfiId': typeof SelfieSelfiIdRoute
  '/selfie/': typeof SelfieIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/mood'
    | '/profile'
    | '/recommendations'
    | '/auth/login'
    | '/auth/signup'
    | '/selfie/$selfiId'
    | '/selfie'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/mood'
    | '/profile'
    | '/recommendations'
    | '/auth/login'
    | '/auth/signup'
    | '/selfie/$selfiId'
    | '/selfie'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/mood'
    | '/profile'
    | '/recommendations'
    | '/auth/login'
    | '/auth/signup'
    | '/selfie/$selfiId'
    | '/selfie/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  MoodRoute: typeof MoodRoute
  ProfileRoute: typeof ProfileRoute
  RecommendationsRoute: typeof RecommendationsRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
  SelfieSelfiIdRoute: typeof SelfieSelfiIdRoute
  SelfieIndexRoute: typeof SelfieIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/recommendations': {
      id: '/recommendations'
      path: '/recommendations'
      fullPath: '/recommendations'
      preLoaderRoute: typeof RecommendationsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/mood': {
      id: '/mood'
      path: '/mood'
      fullPath: '/mood'
      preLoaderRoute: typeof MoodRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/selfie/': {
      id: '/selfie/'
      path: '/selfie'
      fullPath: '/selfie'
      preLoaderRoute: typeof SelfieIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/selfie/$selfiId': {
      id: '/selfie/$selfiId'
      path: '/selfie/$selfiId'
      fullPath: '/selfie/$selfiId'
      preLoaderRoute: typeof SelfieSelfiIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  MoodRoute: MoodRoute,
  ProfileRoute: ProfileRoute,
  RecommendationsRoute: RecommendationsRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
  SelfieSelfiIdRoute: SelfieSelfiIdRoute,
  SelfieIndexRoute: SelfieIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
